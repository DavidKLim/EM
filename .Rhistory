setwd("C:/Users/David/Desktop/Research/GitHub/EM")
n=20
k=3
g=200
pi=c(.45,.3,.25)
sigma=diag(k)
b=matrix(rep(0,times=k*g),nrow=g,byrow=TRUE) # initialize betas
b[1:200,]<-matrix(rep(c(10,11,11.5),times=200),nrow=200,byrow=TRUE) # Fixing the means to ensure no nondiscriminatory cases
b[1:50,]<-matrix(rep(c(10,10,10),times=50),nrow=50)
sim_size_factors<-rep(1,times=n) ### Size Factors
simulate_data=function(n,k,g,init_pi,b){
y<-matrix(rep(0,times=g*n),nrow=g)      # initialize count matrix gxn #
# Prepare new flattened data
z = rmultinom(n,1,init_pi)
# while(any(rowSums(z)==0)){z=rmultinom(n,1,init_pi)}   # makes sure that no one cluster simulated @ 0 membership (only good for simulations)
for(j in 1:g){
for(c in 1:k){
y[j,z[c,]==1] = rpois(sum(z[c,]==1), lambda = sim_size_factors*exp(b[j,c]))
}
}
result<-list(y=y,z=z)
return(result)
}
sim.dat<-simulate_data(n=n,k=k,g=g,init_pi=pi,b=b)
y<-sim.dat$y
z<-sim.dat$z
true_clusters<-rep(0,times=n)
for(i in 1:n){
true_clusters[i]<-which(z[,i]==1)
}
library("DESeq2")
library("genefilter")
row_names<-paste("gene",seq(g))
col_names<-paste("subj",seq(n))
cts<-as.matrix(y)
rownames(cts)<-row_names
colnames(cts)<-col_names
coldata<-matrix(paste("cl",true_clusters,sep=""),nrow=n)
rownames(coldata)<-colnames(cts)
colnames(coldata)<-"cluster"
dds<-DESeqDataSetFromMatrix(countData = cts,
colData = coldata,
design = ~ cluster)
install.packages("forecast",
repos = c("http://rstudio.org/_packages",
"http://cran.rstudio.com"))
library("DESeq2")
remove.packages(c("DESeq2","genefilter"))
biocLite("DESeq2")
source("https://bioconductor.org/biocLite.R")
biocLite("DESeq2")
library(DESeq2)
remove.packages("DESeq2")
